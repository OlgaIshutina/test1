Теория
Что такое инкапсуляция. Привести пример, который демонстрирует ее использование.
Способ взаимодействия полей и методов, объединение данных(полей и методов)
class Aplle(object):
    number = 12
    def printof(self):
        print(self.number)
1.	Зачем нужно наследование? Плюсы и минусы технологии. Привести пример.
Наследование необходимо для того, чтобы все методы класса родителя передались потомку. Плюсы: сокращается код, существует иерархия подчиненности. Минусы: все потомки зависят от родителя и изменений в родительском классе.
class Apple(object):
    def color(self):
        print("red")
class B(A):

2.	Зачем нужен ГИТ. Какие инструменты там есть.
ГИТ позволяет работать над проектом командой, у каждого участника может быть своя ветка. Также программа позволяет сохранять версии, создавать репозитории и читать код без скачивания на ПК.
3.	Магические методы. Какие бывают. Показать применение самых распространенных
Метод __str__ строковое представление объекта
Метод __init__конструктор, позволяет создавать поля в классе
Метод __add__ сложение, __ sub__ вычитание, gt  - больше, ge – больше или равно, lt – меньше, слово super- позволяет не повторять в конструкторе наименование полей класса. Del – удаление объекта, len – длина объекта.
lass Numbers:
    def __init__(self, a, b):
        self.a = a
        self.b  = b
        def __str__(self):
        return f"{self.a} {self.b}"

4.	Перегрузка операторов сложения/сравнения. Зачем нужно. Показать пример
Позволяет складывать, сравнивать и проводить другие математические операции с атрибутами разных объектов.
def __sub__(self, other):
    return Numbers(self.a - other.a, self.b - other.b)
def __gt__(self, other):
    return self.a + self.b > other.a + other.b
def __ge__(self, other:
    return self.a + self.b >= other.a + other.b
def __lt__(self, other):
    return not self.__ge__(other)

5.	Статические методы. Зачем нужны. Пример
Статические методы находятся в классе и не влияют на его состояние, при используются без создания экземпляра класса
class Math():
    @staticmethod
    def maxof(one, two, three,four):
        return max(one, two, three,four)

